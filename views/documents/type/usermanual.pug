doctype html
// See http://www.firepad.io/docs/ for detailed embedding docs.
html
    head
        meta(charset='utf-8')
        // Firebase
        script(src='https://www.gstatic.com/firebasejs/4.1.3/firebase.js')
        // CodeMirror
        script(src='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.17.0/codemirror.js')
        link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.17.0/codemirror.css')
        // Firepad
        link(rel='stylesheet', href='https://cdn.firebase.com/libs/firepad/1.4.0/firepad.css')
        script(src='https://cdn.firebase.com/libs/firepad/1.4.0/firepad.min.js')
        style.
            html {
                height: 100%;
            }

            body {
                margin: 0;
                height: 100%;
                position: relative;
            }

            /* Height / width / positioning can be customized for your use case.
            For demo purposes, we make firepad fill the entire browser. */
            #firepad-container {
                width: 100%;
                height: 100%;
            }
    body(onload='init()')
        #firepad-container
        input(type="hidden" value=document.id)#dcid
        script.
            function init() {
                //// Initialize Firebase.
                //// TODO: replace with your Firebase project configuration.
                var config = {
                    apiKey: "AIzaSyBwE1qR498n4ztDey491qeCypaQ7DRxNCw",
                    authDomain: "helpi-6e932.firebaseapp.com",
                    databaseURL: "https://helpi-6e932.firebaseio.com",
                    projectId: "helpi-6e932",
                    storageBucket: "helpi-6e932.appspot.com",
                    messagingSenderId: "919481448944"
                };
                firebase.initializeApp(config);

                //// Get Firebase Database reference.
                var firepadRef = getExampleRef();

                //// Create CodeMirror (with lineWrapping on).
                var codeMirror = CodeMirror(document.getElementById('firepad-container'), {lineWrapping: true});

                //// Create Firepad (with rich text toolbar and shortcuts enabled).
                var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror,
                    {richTextToolbar: true, richTextShortcuts: true});

                //// Initialize contents.
                firepad.on('ready', function () {
                    firepad.on('ready', function () {
                        if (firepad.isHistoryEmpty()) {
                            firepad.setHtml(
                                '<h1 style="font-size: 24px;">User Manual(일반사용자들을 위한 가이드)</h1>')
                            }
                    });
                });

                // An example of a complex custom entity.
                firepad.registerEntity('checkbox', {
                    render: function (info, entityHandler) {
                        var inputElement = document.createElement('input');
                        inputElement.setAttribute('type', 'checkbox');
                        if (info.checked) {
                            inputElement.checked = 'checked';
                        }
                        inputElement.addEventListener('click', function () {
                            entityHandler.replace({checked: this.checked});
                        });
                        return inputElement;
                    }.bind(this),
                    fromElement: function (element) {
                        var info = {};
                        if (element.hasAttribute('checked')) {
                            info.checked = true;
                        }
                        return info;
                    },
                    update: function (info, element) {
                        if (info.checked) {
                            element.checked = 'checked';
                        } else {
                            element.checked = null;
                        }
                    },
                    export: function (info) {
                        var inputElement = document.createElement('checkbox');
                        if (info.checked) {
                            inputElement.setAttribute('checked', true);
                        }
                        return inputElement;
                    }
                });
            }

            // Helper to get hash from end of URL or generate a random one.
            function getExampleRef() {
                var ref = firebase.database().ref();
                //var hash = window.location.hash.replace(/#/g, '');
                var hash = document.getElementById('dcid').value;
                if (hash) {
                    ref = ref.child(hash);
                } else {
                    ref = ref.push(); // generate unique location.
                    //window.location = window.location + '#' + ref.key; // add it as a hash to the URL.
                }
                if (typeof console !== 'undefined') {
                    console.log('Firebase data: ', ref.toString());
                }   
                return ref;
            }